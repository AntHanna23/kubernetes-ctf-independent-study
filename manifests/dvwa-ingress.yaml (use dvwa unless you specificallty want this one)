apiVersion: apps/v1
kind: Deployment
metadata:
  name: dvwa
  labels:
    app: dvwa
spec:
  selector:
    matchLabels:
      app: dvwa
  template:
    metadata:
      labels:
        app: dvwa
    spec:
      containers:
      - name: dvwa
        image: ajhanna/dvwa
        ports:
        - containerPort: 80
        resources: 
          limits:
            cpu: "600m"
            memory: "256Mi" 
          requests:  
            cpu: "200m"
            memory: "64Mi"

---

apiVersion: v1
kind: Service
metadata:
  name: dvwa-service
  labels:
    app: dvwa
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector:
    app: dvwa

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: dvwa-ingress
  annotations:
    kubenetes.io/ingress.class: "traefick"
    traefik.ingress.kubernetes.io/rule-type: "PathPrefixStrip"
spec:
  rules:
  - http:
      paths:
      - path: /
        backend: 
          serviceName: dvwa-service
          servicePort: 80
# ---
# apiVersion: traefik.containo.us/v1alpha1
# kind: Middleware
# metadata:
#   name: dvwa-auth
# spec:
#   forwardAuth:
#     address: 
#       - https://192.168.86.182/login.php
#       - https://192.168.86.184/login.php
#       - https://192.168.86.185/login.php
#     trustForwardHeader: true
# ---

# apiVersion: traefik.containo.us/v1alpha1
# kind: Middleware
# metadata:
#   name: dvwa-header
# spec:
#   headers:
#     frameDeny: "true"
#     sslRedirect: "true"
# ---    

---

apiVersion:  autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata: 
  name: dvwa-autoscaler
  namespace: ctf
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: dvwa
  maxReplicas: 30
  minReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 40
  - type: Resource
    resource:
      name: memory
      targetAverageValue: "400Mi"

