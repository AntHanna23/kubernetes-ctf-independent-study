apiVersion: apps/v1
kind: Deployment
metadata:
  name: dvwa
  labels:
    app: dvwa
spec:
  selector:
    matchLabels:
      app: dvwa
  template:
    metadata:
      labels:
        app: dvwa
    spec:
      containers:
      - name: dvwa
        image: ajhanna/dvwa
        ports:
        - containerPort: 80
        resources: 
          limits:
            cpu: "600m"
            memory: "256Mi" 
          requests:  
            cpu: "200m"
            memory: "64Mi"

---

apiVersion: v1
kind: Service
metadata:
  name: dvwa-service
  labels:
    app: dvwa
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 80
  selector:
    app: dvwa

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: dvwa-ingress
  annotations:
    kubenetes.io/ingress.class: "traefick"
spec:
  rules:
  - http:
      paths:
      - path: /
        backend: 
          serviceName: dvwa-service
          servicePort: 8080

---

# apiVersion: autoscaling/v1
# kind: HorizontalPodAutoscaler
# metadata:
#   name: dvwa-autoscaler
# spec:
#   scaleTargetRef:
#     kind: ReplicaSet
#     name: dvwa
#   minReplicas: 10
#   maxReplicas: 50
#   targetCPUUtilizationPercentage: 70
apiVersion:  autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata: 
  name: dvwa-autoscaler
  namespace: ctf
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: dvwa
  maxReplicas: 30
  minReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 40
  - type: Resource
    resource:
      name: memory
      targetAverageValue: "100Mi"

